name: PHP Tests

on: [ push, pull_request ]

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1', '8.2', '8.3' ]
        dbal-version:
          - "default"
          - "3.7"
        include:
          - php-version: "8.2"
            dbal-version: "4@dev"
          - php-version: "8.2"
            dbal-version: "4@dev"
          - php-version: "8.1"
            dbal-version: "default"
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }} with DBAL ${{ matrix.dbal-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Require specific DBAL version"
        run: "composer require doctrine/dbal ^${{ matrix.dbal-version }} --no-update"
        if: "${{ matrix.dbal-version != 'default' }}"

      - name: Install Composer dependencies
        run: |
          composer require doctrine/persistence --no-update
          composer global require php-coveralls/php-coveralls
          composer update --prefer-stable --prefer-dist --no-interaction

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run test suite
        run: vendor/bin/phpunit --coverage-clover build/reports/clover.xml

      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          php-coveralls --coverage_clover=build/reports/clover.xml --json_path=build/reports/coveralls-upload.json -v